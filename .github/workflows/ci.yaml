name: Deploy (Cloudflare Pages)

on:
  push:
    branches: [ main ]
  workflow_dispatch:

concurrency:
  group: deploy-${{ github.ref }}
  cancel-in-progress: true

jobs:
  deploy-student:
    runs-on: ubuntu-latest

    permissions:
      contents: read

    env:
      # ✅ wrangler가 인식하는 공식 이름만 사용
      CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
      CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
      PROJECT_NAME: quiz-rpg

    steps:
      - uses: actions/checkout@v4

      - uses: pnpm/action-setup@v4
        with:
          version: 10.18.3
          run_install: false

      - uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'pnpm'

      - run: corepack enable
      - run: pnpm i --frozen-lockfile=false
      - run: pnpm typecheck
      - run: pnpm -C apps/student build

      # SPA 404 방지
      - name: Ensure _redirects
        run: |
          if [ -f apps/student/public/_redirects ]; then
            cp apps/student/public/_redirects apps/student/dist/_redirects
          else
            echo '/* /index.html 200' > apps/student/dist/_redirects
          fi

      # ⚠️ wrangler-action 제거, 전역 설치로 단순화
      - name: Install Wrangler
        run: npm i -g wrangler@3
        env:
          NPM_CONFIG_FUND: false
          NPM_CONFIG_AUDIT: false
          npm_config_unsafe_perm: true

      # ❌ whoami / list 제거 (OAuth 요구/권한 혼동 방지)
      # 프로젝트는 '생성 시도 -> 이미 있으면 통과' 전략으로 처리
      - name: Ensure project exists (idempotent)
        run: |
          wrangler pages project create "$PROJECT_NAME" \
            --production-branch=main \
            --account-id "$CLOUDFLARE_ACCOUNT_ID" \
            --api-token "$CLOUDFLARE_API_TOKEN" \
          || echo "project exists or already configured"

      - name: Deploy
        run: |
          wrangler pages deploy apps/student/dist \
            --project-name="$PROJECT_NAME" \
            --account-id "$CLOUDFLARE_ACCOUNT_ID" \
            --api-token "$CLOUDFLARE_API_TOKEN"
