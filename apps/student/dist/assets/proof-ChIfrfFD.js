const o=new TextEncoder;async function r(s){const t=await crypto.subtle.digest("SHA-256",s);return new Uint8Array(t)}function c(s,t){const n=new Uint8Array(s.length+t.length);return n.set(s),n.set(t,s.length),n}function a(s){let t="";for(const n of s)t+=String.fromCharCode(n);return btoa(t)}class e{constructor(){this.turns=0,this.start=performance.now()}static async create(){const t=crypto.getRandomValues(new Uint8Array(16)),n=new e;return n.h=await r(t),n}async log(t){const n=o.encode(JSON.stringify({ts:Date.now(),...t}));this.h=await r(c(this.h,n)),this.turns++}async summary(t){const n=Math.round((performance.now()-this.start)/1e3);return{finalHash:a(this.h),turns:this.turns,durationSec:n,cleared:t}}}export{e as Proof};
