const e=new TextEncoder;async function s(r){const t=(typeof r=="string"?e.encode(r):r instanceof Uint8Array?r:new Uint8Array(r)).slice().buffer,c=await crypto.subtle.digest("SHA-256",t);return new Uint8Array(c)}function a(r,n){const t=new Uint8Array(r.length+n.length);return t.set(r),t.set(n,r.length),t}function i(r){let n="";for(const t of r)n+=String.fromCharCode(t);return btoa(n)}class o{constructor(){this.turns=0,this.start=performance.now()}static async create(){const n=crypto.getRandomValues(new Uint8Array(16)),t=new o;return t.h=await s(n),t}async log(n){const t=e.encode(JSON.stringify({ts:Date.now(),...n}));this.h=await s(a(this.h,t)),this.turns++}async summary(n){const t=Math.round((performance.now()-this.start)/1e3);return{finalHash:i(this.h),turns:this.turns,durationSec:t,cleared:n}}}export{o as Proof,s as sha256};
